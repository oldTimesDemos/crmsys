<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.dao.SysRightMapper">
  <resultMap id="BaseResultMap" type="com.qfedu.entity.SysRight">
    <id column="right_code" jdbcType="INTEGER" property="rightCode" />
    <result column="right_parent_code" jdbcType="INTEGER" property="rightParentCode" />
    <result column="right_name" jdbcType="VARCHAR" property="rightName" />
    <result column="right_url" jdbcType="VARCHAR" property="rightUrl" />
    <result column="right_node_type" jdbcType="INTEGER" property="rightNodeType" />
    <result column="right_flag" jdbcType="INTEGER" property="rightFlag" />
  </resultMap>
  
  <resultMap type="com.qfedu.vo.VMenuInfo" id="menuMap">
	<id column="right_code" property="menuId" />
	<result column="right_name" property="menuName" />
	<result column="right_url" property="menuUrl" />
	<collection property="menulist" javaType="list"
		ofType="com.qfedu.vo.VMenuInfo">
		<id column="ccode" property="menuId" />
		<result column="cname" property="menuName" />
		<result column="curl" property="menuUrl" />
	</collection>
</resultMap>
  
  <sql id="Base_Column_List">
    right_code, right_parent_code, right_name, right_url, right_node_type, right_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_right
    where right_code = #{rightCode,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_right
    where right_code = #{rightCode,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.entity.SysRight">
    insert into sys_right (right_code, right_parent_code, right_name, 
      right_url, right_node_type, right_flag
      )
    values (#{rightCode,jdbcType=INTEGER}, #{rightParentCode,jdbcType=INTEGER}, #{rightName,jdbcType=VARCHAR}, 
      #{rightUrl,jdbcType=VARCHAR}, #{rightNodeType,jdbcType=INTEGER}, #{rightFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.entity.SysRight">
    insert into sys_right
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rightCode != null">
        right_code,
      </if>
      <if test="rightParentCode != null">
        right_parent_code,
      </if>
      <if test="rightName != null">
        right_name,
      </if>
      <if test="rightUrl != null">
        right_url,
      </if>
      <if test="rightNodeType != null">
        right_node_type,
      </if>
      <if test="rightFlag != null">
        right_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rightCode != null">
        #{rightCode,jdbcType=INTEGER},
      </if>
      <if test="rightParentCode != null">
        #{rightParentCode,jdbcType=INTEGER},
      </if>
      <if test="rightName != null">
        #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="rightUrl != null">
        #{rightUrl,jdbcType=VARCHAR},
      </if>
      <if test="rightNodeType != null">
        #{rightNodeType,jdbcType=INTEGER},
      </if>
      <if test="rightFlag != null">
        #{rightFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.entity.SysRight">
    update sys_right
    <set>
      <if test="rightParentCode != null">
        right_parent_code = #{rightParentCode,jdbcType=INTEGER},
      </if>
      <if test="rightName != null">
        right_name = #{rightName,jdbcType=VARCHAR},
      </if>
      <if test="rightUrl != null">
        right_url = #{rightUrl,jdbcType=VARCHAR},
      </if>
      <if test="rightNodeType != null">
        right_node_type = #{rightNodeType,jdbcType=INTEGER},
      </if>
      <if test="rightFlag != null">
        right_flag = #{rightFlag,jdbcType=INTEGER},
      </if>
    </set>
    where right_code = #{rightCode,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.entity.SysRight">
    update sys_right
    set right_parent_code = #{rightParentCode,jdbcType=INTEGER},
      right_name = #{rightName,jdbcType=VARCHAR},
      right_url = #{rightUrl,jdbcType=VARCHAR},
      right_node_type = #{rightNodeType,jdbcType=INTEGER},
      right_flag = #{rightFlag,jdbcType=INTEGER}
    where right_code = #{rightCode,jdbcType=INTEGER}
  </update>
  
 	<!-- 新增 -->

	<select id="selectMenu" parameterType="int" resultMap="menuMap">
		SELECT p.right_code,p.right_name,p.right_url,c.right_code ccode,c.right_name
		cname,c.right_url curl
		FROM sys_right p
		INNER JOIN sys_right c
		ON c.right_parent_code = p.right_code
		INNER JOIN sys_role_right rr
		ON rr.rf_right_code = c.right_code
		WHERE rr.rf_role_id = #{roleid}
		and c.right_flag = 1
	</select>
 	
 	<select id="selectAllTreeNode" resultType="com.qfedu.vo.VTreeInfo">
 		select right_code,right_parent_code,right_name from sys_right 
 	 </select>

	<select id="selectCheckNodeId" parameterType="int"
		resultType="int">
		SELECT rf_right_code FROM sys_role_right
		WHERE rf_role_id = #{roleId}
	</select>
	
	<delete id="deleteByRoleId" parameterType="int">
		delete  from sys_role_right where rf_role_id = #{roleId}
	</delete>
	
	<insert id="insertRoleAndRight" parameterType="map">
		insert into sys_role_right(rf_role_id,rf_right_code) values
		<foreach collection="rightCodes" item="rightCode" separator=",">
			(#{roleId},#{rightCode})
		</foreach>
	</insert>
	
	<select id="findAllRighs" resultType="com.qfedu.vo.VRight">
	SELECT
	s.right_code,s.right_name,r.right_name rName,s.right_flag FROM
	sys_right s
	left JOIN sys_right r
	on s.right_parent_code = r.right_code

</select>

    <select id="seachByCondition" parameterType="map" resultType="com.qfedu.vo.VRight">
    SELECT
	s.right_code,s.right_name,r.right_name rName,s.right_flag FROM
	sys_right s
	left JOIN sys_right r
	on s.right_parent_code = r.right_code
    <where>
        <if test="rightName != null">
            and s.right_name LIKE CONCAT('%',#{rightName},'%')
        </if>
        <if test="rightParentCode != 0">
            AND s.right_parent_code = #{rightParentCode}
        </if>
    </where>
    </select>

    <select id="findAllParentNode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"></include>
         FROM sys_right WHERE
	    right_parent_code is NULL

    </select>
</mapper>