<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="com.qfedu.entity.SysUser">
		<id column="usr_id" jdbcType="INTEGER" property="usrId" />
		<result column="usr_name" jdbcType="VARCHAR" property="usrName" />
		<result column="usr_password" jdbcType="VARCHAR"
			property="usrPassword" />
		<result column="usr_role_id" jdbcType="INTEGER"
			property="usrRoleId" />
		<result column="usr_flag" jdbcType="INTEGER" property="usrFlag" />
	</resultMap>

	<resultMap type="com.qfedu.vo.VUserInfo" id="userMap">
		<id column="usr_id" jdbcType="INTEGER" property="usrId" />
		<result column="usr_name" jdbcType="VARCHAR" property="usrName" />
		<result column="usr_flag" jdbcType="INTEGER" property="usrFlag" />
		<association property="role"
			resultMap="com.qfedu.dao.SysRoleMapper.BaseResultMap">
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		usr_id, usr_name, usr_password, usr_role_id, usr_flag
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where usr_id = #{usrId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_user
		where usr_id =
		#{usrId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.qfedu.entity.SysUser">
		insert into sys_user (usr_id,
		usr_name, usr_password,
		usr_role_id, usr_flag)
		values
		(#{usrId,jdbcType=INTEGER}, #{usrName,jdbcType=VARCHAR},
		#{usrPassword,jdbcType=VARCHAR},
		#{usrRoleId,jdbcType=INTEGER},
		#{usrFlag,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.qfedu.entity.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="usrId != null">
				usr_id,
			</if>
			<if test="usrName != null">
				usr_name,
			</if>
			<if test="usrPassword != null">
				usr_password,
			</if>
			<if test="usrRoleId != null">
				usr_role_id,
			</if>
			<if test="usrFlag != null">
				usr_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="usrId != null">
				#{usrId,jdbcType=INTEGER},
			</if>
			<if test="usrName != null">
				#{usrName,jdbcType=VARCHAR},
			</if>
			<if test="usrPassword != null">
				#{usrPassword,jdbcType=VARCHAR},
			</if>
			<if test="usrRoleId != null">
				#{usrRoleId,jdbcType=INTEGER},
			</if>
			<if test="usrFlag != null">
				#{usrFlag,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.qfedu.entity.SysUser">
		update sys_user
		<set>
			<if test="usrName != null">
				usr_name = #{usrName,jdbcType=VARCHAR},
			</if>
			<if test="usrPassword != null">
				usr_password = #{usrPassword,jdbcType=VARCHAR},
			</if>
			<if test="usrRoleId != null">
				usr_role_id = #{usrRoleId,jdbcType=INTEGER},
			</if>
			<if test="usrFlag != null">
				usr_flag = #{usrFlag,jdbcType=INTEGER},
			</if>
		</set>
		where usr_id = #{usrId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.qfedu.entity.SysUser">
		update sys_user
		set usr_name =
		#{usrName,jdbcType=VARCHAR},
		usr_password =
		#{usrPassword,jdbcType=VARCHAR},
		usr_role_id =
		#{usrRoleId,jdbcType=INTEGER},
		usr_flag = #{usrFlag,jdbcType=INTEGER}
		where usr_id = #{usrId,jdbcType=INTEGER}
	</update>

	<!-- 额外增加 -->

	<select id="selectByName" parameterType="string"
		resultType="user">
		select
		<include refid="Base_Column_List"></include>
		from sys_user where usr_name = #{name}
	</select>

	<select id="selectInfoByUid" parameterType="int"
		resultType="com.qfedu.vo.UserInfo">
		SELECT * FROM sys_user u
		INNER JOIN sys_role r
		ON
		u.usr_role_id = r.role_id
		WHERE u.usr_id = #{uid}
	</select>

	<select id="selectAll" resultMap="userMap">
		SELECT
		u.usr_id,u.usr_name,u.usr_flag,r.role_id,r.role_name
		FROM sys_user u
		INNER JOIN sys_role r
		ON u.usr_role_id = r.role_id
	</select>
	
	<select id="selectUserByUid" parameterType="int" resultMap="userMap">
		SELECT
		u.usr_id,u.usr_name,u.usr_flag,r.role_id,r.role_name
		FROM sys_user u
		INNER JOIN sys_role r
		ON u.usr_role_id = r.role_id
		where  u.usr_id = #{usrId}
	</select>
	
	<insert id="insertUsers" parameterType="list">
		insert into sys_user(usr_name,usr_password,usr_role_id,usr_flag)values
		<foreach collection="list" item="user" separator=",">
			(#{user.usrName},#{user.usrPassword},#{user.usrRoleId},#{user.usrFlag})
		</foreach>
	</insert>
	
	<select id="selectUserByNameOrRoleId" parameterType="map" resultMap="userMap">
		SELECT
		u.usr_id,u.usr_name,u.usr_flag,r.role_id,r.role_name
		FROM sys_user u
		INNER JOIN sys_role r
		ON u.usr_role_id = r.role_id
		<where>
			<if test="usrName != null">
			and	u.usr_name LIKE concat('%',#{usrName},'%')
			</if>
			<if test="roleId != 0">
			and u.usr_role_id = #{roleId}
			</if>
		</where>
		
	</select>
</mapper>