<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
  
     <!-- 1 扫描注解 -->
     
     <!-- 扫描非控制器的注解 -->
     <context:component-scan base-package="com.qfedu.service.impl"></context:component-scan>
     
     <!-- 2 配置数据库连接池  druid -->
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/crm1901" />
		<property name="username" value="root" />
		<property name="password" value="112117" />
		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		
	</bean>
	
	<!-- 3 创建SqlSessionFactory对象， 设置mybatis的主配置和映射配置 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--设置数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 加载mybatis主配置文件  classpath: 编译后文件所在路径 -->
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<!-- 加载mybatis映射文件    加载指定路径下，所有的后缀是xml的文件  -->
		<property name="mapperLocations" value="classpath:com/qfedu/mapping/*.xml"/>
	</bean>
	
	<!-- 4 扫描相关的dao接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 设置dao接口所在包 -->
		<property name="basePackage" value="com.qfedu.dao"></property>
	</bean>
	
	<!-- 5 事务管理对象 -->
	<bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"></property>
   	</bean>
	
	<!-- 6 设置事务的增强 -->
	<tx:advice id="txAdvice" transaction-manager="txManage">
   		<tx:attributes>
   			<tx:method name="add*" read-only="false" propagation="REQUIRED"/>
   			<tx:method name="delete*" read-only="false"  propagation="REQUIRED"/>
   			<tx:method name="update*" read-only="false"  propagation="REQUIRED"/>
   			<tx:method name="find*" read-only="true"  propagation="REQUIRED"/>
   			<!-- 针对其余的方法 -->
   			<tx:method name="*" propagation="NOT_SUPPORTED"/>
   			
   		</tx:attributes>
   </tx:advice>
	
	<!-- 7 aop的配置 -->
	<aop:config>
   		<!-- 切入点 -->
   		<aop:pointcut expression="execution(* com.qfedu.service.impl.*.*(..))" id="pc"/>
   
   		<!-- 通知 -->
   		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
   
   </aop:config>
        
	
	   
        
</beans>